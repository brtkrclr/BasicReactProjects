{"ast":null,"code":"var _jsxFileName = \"/home/berat/Desktop/hub/Notepad/src/components/Content.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Row, Col, List } from 'antd';\nimport { useForm } from \"antd/es/form/Form\";\nimport { EditFilled } from \"@ant-design/icons\";\nimport TextArea from \"antd/es/input/TextArea\";\n\nconst Content = () => {\n  const [form] = useForm();\n  const [notes, setNotes] = useState([]);\n  const [selectedItem, setSelectedItem] = useState([]); //submit if the value does not exist, upgrade if the value exist\n\n  const onFinish = values => {\n    const newNote = notes.findIndex(e => e.id === values.id);\n\n    if (newNote === -1) {\n      setNotes([...notes, {\n        id: Date.now(),\n        title: values.title,\n        text: values.text\n      }]);\n      form.resetFields();\n    } else {\n      notes[newNote] = values;\n      form.resetFields();\n      console.log(\"updated NOtes:\", notes);\n      setNotes(notes);\n      setSelectedItem(null);\n    }\n  }; //finds the clicked item\n\n\n  const findItem = id => {\n    const newSelectedItem = notes.find(note => note.id === id);\n    setSelectedItem(newSelectedItem);\n  }; //show the selected value!\n\n\n  React.useEffect(() => {\n    form.setFieldsValue(selectedItem);\n  });\n  console.log(\"selected item:\", selectedItem);\n  console.log(notes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"enterSpace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"leftColumn\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noteCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(EditFilled, {\n    onClick: () => findItem(note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(List.Item.Meta, {\n    title: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 56\n      }\n    }, note.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"rightColumn\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"Enter Note\"), /*#__PURE__*/React.createElement(Form, {\n    onFinish: onFinish,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    type: \"text\",\n    name: \"id\",\n    label: \"ID\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    type: \"text\",\n    name: \"title\",\n    label: \"Title\",\n    rules: [{\n      required: true,\n      message: 'Please input your Title!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    type: \"text\",\n    name: \"text\",\n    label: \"Text\",\n    rules: [{\n      required: true,\n      message: 'Please input your Text!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/berat/Desktop/hub/Notepad/src/components/Content.js"],"names":["React","useState","Form","Input","Button","Row","Col","List","useForm","EditFilled","TextArea","Content","form","notes","setNotes","selectedItem","setSelectedItem","onFinish","values","newNote","findIndex","e","id","Date","now","title","text","resetFields","console","log","findItem","newSelectedItem","find","note","useEffect","setFieldsValue","map","required","message"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Form, Input, Button, Row, Col, List} from 'antd';\nimport {useForm} from \"antd/es/form/Form\";\nimport {EditFilled} from \"@ant-design/icons\";\nimport TextArea from \"antd/es/input/TextArea\";\n\nconst Content = () => {\n        const [form] = useForm();\n        const [notes, setNotes] = useState([]);\n        const [selectedItem, setSelectedItem] = useState([]);\n\n        //submit if the value does not exist, upgrade if the value exist\n        const onFinish = (values) => {\n            const newNote = notes.findIndex((e) => e.id === values.id);\n            if (newNote === -1) {\n                setNotes([...notes, {id: Date.now(), title: values.title, text: values.text}]);\n                form.resetFields()\n            } else {\n                notes[newNote] = values\n                form.resetFields()\n                console.log(\"updated NOtes:\", notes)\n                setNotes(notes)\n                setSelectedItem(null)\n            }\n        };\n        //finds the clicked item\n        const findItem = id => {\n            const newSelectedItem = notes.find((note) => note.id === id);\n            setSelectedItem(newSelectedItem);\n        };\n        //show the selected value!\n        React.useEffect(() => {\n            form.setFieldsValue(selectedItem);\n        });\n\n        console.log(\"selected item:\", selectedItem)\n        console.log(notes)\n        return (\n            <div className=\"enterSpace\">\n                <Row>\n                    <Col className={\"leftColumn\"}\n                         span={12}>\n                        <div className=\"notes1\">\n                            <h3>\n                                Notes\n                            </h3>\n                            <ul>\n                                {notes.map((note) => (\n                                    <div className=\"noteCard\">\n                                        <List.Item>\n                                            <EditFilled onClick={() => findItem(note.id)}></EditFilled>\n                                            <List.Item.Meta\n                                                title={<p>{note.title}</p>}\n                                            />\n                                        </List.Item>\n                                    </div>\n                                ))}\n                            </ul>\n                        </div>\n                    </Col>\n                    <Col className={\"rightColumn\"} span={12}>\n                        <h3>\n                            Enter Note\n                        </h3>\n                        <Form\n                            onFinish={onFinish}\n                            form={form}>\n                            <Form.Item\n                                type=\"text\"\n                                name=\"id\"\n                                label=\"ID\"\n                                hidden={true}\n                            >\n                            </Form.Item>\n                            <Form.Item\n                                type=\"text\"\n                                name=\"title\"\n                                label=\"Title\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Title!',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item\n                                type=\"text\"\n                                name=\"text\"\n                                label=\"Text\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Text!',\n                                    },\n                                ]}>\n                                <TextArea/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n;\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}